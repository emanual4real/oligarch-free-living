name: Node CI/CD

on: [push]

jobs:
  build-client:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./client
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14"
      - name: Installing node dependencies
        run: npm ci
      - name: Running automated tests üß™
        run: npm run test
      - name: Running lint rules üßπ
        run: npm run lint
      - name: Making production build üèóÔ∏è
        run: npm run build:production --if-present
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: client
          path: client/dist/browser
  build-server:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./server
    steps:
      - uses: actions/checkout@v4
      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "22.14"
      - name: Installing node dependencies
        run: npm ci
      # - name: "Running automated tests üß™"
      #   run: npm run test
      - name: "Running lint rules üßπ"
        run: npm run lint
      - name: "Making production build üèóÔ∏è"
        run: npm run build --if-present
      - name: Archive production artifacts
        uses: actions/upload-artifact@v4
        with:
          name: server
          path: server/dist
  deploy-client:
    runs-on: ubuntu-latest
    needs: build-client
    if: github.ref == 'refs/heads/main'
    steps:
      - name: "Download all artifacts"
        uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "client/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: ${{ secrets.REMOTE_TARGET }}
          EXCLUDE: "/dist/"
  deploy-server:
    runs-on: ubuntu-latest
    needs: build-server
    if: github.ref == 'refs/heads/main'
    steps:
      - name: "Download all artifacts"
        uses: actions/download-artifact@v4
      - name: Display structure of downloaded files
        run: ls -R
      - name: Deploy to Server
        uses: easingthemes/ssh-deploy@main
        with:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          ARGS: "-rlgoDzvc -i --delete"
          SOURCE: "server/"
          REMOTE_HOST: ${{ secrets.REMOTE_HOST }}
          REMOTE_USER: ${{ secrets.REMOTE_USER }}
          TARGET: /home/server
          EXCLUDE: "/dist/"
